Example 1:
```
fn main() {
    let mut s = String::from("hello");
    let ref1 = &s;
    let ref2 = &ref1;
    let ref3 = &ref2;
    s = String::from("goodbye");
    println!("{}", ref3.to_uppercase());
}
```

from ref1 to ref3,  s has been borrowed triple which are immutable .
so it coundn't be borrowed as mutable


Example 2:
```
fn drip_drop() -> &String {
    let s = String::from("hello world!");
    return &s;
}
```

the pointer of s is a local variable which would be dropped after function returned 




Example 3:
```
fn main() {
    let s1 = String::from("hello");
    let mut v = Vec::new();
    v.push(s1);
    let s2: String = v[0];
    println!("{}", s2);
}
```

from the     let s2: String = v[0];

s2 should be the borrowed v[0] but the type of s2 be writened as String .